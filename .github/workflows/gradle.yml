# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run Tests
      run: ./gradlew test

    - name: Run Test Coverage
      run: ./gradlew jacocoTestReport

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --local user.name "Github workflow"
          git config --local user.email "nowhere@gmail.com"
          git add -A
          git commit -m "Autogenerated JaCoCo coverage badge"
        fi

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        branch: ${{ github.ref }}

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
  deploy:
    needs: [ build ]
    uses: ./.github/workflows/test.yml
    with:
      environment: production
  get-result:
    name: 'Get result'
    needs: [ deploy ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Get result'
        id: gg
        run: |
          echo 'TRIGGERED'
          echo 'CONCLUSION=${{ env.WORKFLOW_CONCLUSION }}'